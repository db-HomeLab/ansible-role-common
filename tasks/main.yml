---
# - name: Import distribution vars
#   ansible.builtin.include_vars: "{{lookup('ansible.builtin.first_found', params)}}"
#   vars:
#     params:
#       files:
#         - '{{ ansible_distribution }}.yml'
#         - '{{ ansible_os_family }}.yml'
#         - default.yml
#       paths:
#         - 'vars'

- name: Install common packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: latest
    update_cache: true
  #with_items: "{{ packages }}"
  when: "ansible_os_family == 'Debian'"

- name: Add public keys to hosts
  ansible.posix.authorized_key:
    user: root
    state: present
    key: "{{ item }}"
  loop: "{{ public_keys }}"

- name: Edit sshd_config
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regex: "{{ item.regex }}"
    line: "{{ item.line }}"
  loop:
    - {'regex': '^(# *)?PermitRootLogin', 'line': 'PermitRootLogin prohibit-password'}
    - {'regex': '^(# *)?PubkeyAuthentication', 'line': 'PubkeyAuthentication yes'}
    - {'regex': '^(# *)?ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}
    - {'regex': '^(# *)?UsePAM', 'line': 'UsePAM yes'}
  notify:
    - "Restart sshd"

- name: Remove existing groups from sudoers config
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: absent
    regexp: '^(?!%wheel)%.*'

- name: Ensure wheel group in sudoers config
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'

- name: Create certs file
  ansible.builtin.file:
    path: /etc/openldap/certs/
    state: directory
    mode: '0600'
    owner: root
    group: root
    recurse: true

- name: Copy cert CA
  ansible.builtin.copy:
    dest: /etc/openldap/certs/ca.pem
    content: "{{ sssd_ca_cert }}"
    state: present
    mode: '0600'
    owner: root
    group: root
  notify:
    - Restart sssd

- name: Copy sssd related configs
  ansible.builtin.copy:
    src: "{{ role_path }}/files/{{ item.file }}"
    dest: "{{ item.path }}/{{ item.file }}"
    mode: "{{ item.perm }}"
    owner: root
    group: root
  loop:
    - {'file': 'sssd.conf', 'path': '/etc/sssd/', 'perm': '0600'}
    - {'file': 'nsswitch.conf', 'path': '/etc/', 'perm': '0644'}
  notify:
    - Restart sssd

- name: Insert a new rule before an existing rule
  ansible.builtin.lineinfile:
    path: /etc/pam.d/common-session
    insertbefore: BOF
    line: "session    required    pam_mkhomedir.so skel=/etc/skel/ umask=0022"
  when: "ansible_os_family == 'Debian'"
